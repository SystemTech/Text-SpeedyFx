#!/usr/bin/env perl
use strict;
use utf8;
use warnings;

use File::Map qw(map_file);
use Getopt::Long;
use Pod::Usage;
use Text::SpeedyFx;

# implementation of http://blogs.perl.org/users/alexandr_gomoliako/2012/04/linear-probabilistic-counters-for-analytics.html

GetOptions(
    q(help)             => \my $help,
    q(binmode=s)        => \my $binmode,
    q(length=i)         => \my $len,
    q(seed=i)           => \my $seed,
) or pod2usage(q(-verbose) => 1);
pod2usage(q(-verbose) => 1)
    if $help or $#ARGV != 0;

$len ||= 4096 << 3;

map_file
    my $data,
    shift @ARGV,
    q(<) . ($binmode // q(:utf8));

my $sfx = Text::SpeedyFx->new($seed // 0x4c53_4820);
my $fv = $sfx->hash_fv($data, $len);

my $empty = 0;
vec($fv, $_, 1) == 0 && ++$empty
    for 0 .. $len - 1;

printf qq(%0.0f\n), -$len * log($empty / $len);
