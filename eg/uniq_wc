#!/usr/bin/env perl
use autodie;
use strict;
use utf8;
use warnings;

use Getopt::Long;
use Pod::Usage;
use Text::SpeedyFx;

# implementation of http://blogs.perl.org/users/alexandr_gomoliako/2012/04/linear-probabilistic-counters-for-analytics.html

GetOptions(
    q(help)             => \my $help,
    q(length=i)         => \my $len,
    q(seed=i)           => \my $seed,
    q(bits=i)           => \my $bits,
) or pod2usage(-verbose => 1);
pod2usage(-verbose => 2)
    if $help or $#ARGV != 0;

$len = 4096 << 3
    unless $len;
$seed = 0x4c53_4820
    unless $seed;
$bits = 8
    unless $bits;

my $data;
{
    local $/ = undef;
    open my $fh, q(<:mmap), shift @ARGV;
    $data = <$fh>;
    close $fh;
}

my $sfx = Text::SpeedyFx->new($seed, $bits);
my $fv = $sfx->hash_fv($data, $len);

my $empty = $len - unpack q(%32b*) => $fv;

printf qq(%0.0f\n), -$len * log($empty / $len);
